Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    FALSE
    GOTO
    LABEL
    LBLOCK
    NIL
    PACKED
    RBLOCK
    READLINE
    REPEAT
    SUBRANGE
    TRUE
    UNTIL

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM ID SEMICOLON declaration_sections block DOT
Rule 2     declaration_sections -> declaration_sections declaration_section
Rule 3     declaration_sections -> empty
Rule 4     declaration_section -> uses_opt
Rule 5     declaration_section -> constant_declaration
Rule 6     declaration_section -> type_declaration
Rule 7     declaration_section -> var_declaration
Rule 8     declaration_section -> procedure_declarations
Rule 9     declaration_section -> function_declaration
Rule 10    declaration_section -> constructor_declaration
Rule 11    declaration_section -> method_declaration
Rule 12    method_declaration -> CONSTRUCTOR ID DOT ID LPAREN parameter_list RPAREN SEMICOLON block
Rule 13    method_declaration -> PROCEDURE ID DOT ID LPAREN parameter_list RPAREN SEMICOLON block
Rule 14    method_declaration -> FUNCTION ID DOT ID LPAREN parameter_list RPAREN COLON type_specifier SEMICOLON block
Rule 15    method_declaration -> DESTRUCTOR ID DOT ID SEMICOLON block
Rule 16    constructor_declaration -> CONSTRUCTOR ID LPAREN field_list RPAREN SEMICOLON block
Rule 17    constructor_declaration -> CONSTRUCTOR ID LPAREN RPAREN SEMICOLON block
Rule 18    uses_opt -> USES id_list SEMICOLON
Rule 19    id_list -> ID
Rule 20    id_list -> id_list COMMA ID
Rule 21    var_declaration -> VAR declaration_list
Rule 22    declaration_list -> declaration
Rule 23    declaration_list -> declaration_list declaration
Rule 24    declaration -> id_list COLON type_specifier SEMICOLON
Rule 25    block -> declaration_sections compound_statement
Rule 26    type_declaration -> TYPE type_list
Rule 27    type_list -> type_definition
Rule 28    type_list -> type_list type_definition
Rule 29    type_definition -> ID EQUAL type_specifier SEMICOLON
Rule 30    type_specifier -> ARRAY LBRACKET type_expression RBRACKET OF type_specifier
Rule 31    type_specifier -> subrange
Rule 32    type_specifier -> FILE OF type_specifier
Rule 33    type_specifier -> SET OF type_specifier
Rule 34    type_specifier -> RECORD field_list case_part END
Rule 35    type_specifier -> OBJECT field_list method_list END
Rule 36    type_specifier -> LPAREN id_list RPAREN
Rule 37    type_specifier -> BOOLEAN_LITERAL
Rule 38    type_specifier -> INTEGER
Rule 39    type_specifier -> BYTE
Rule 40    type_specifier -> CHAR
Rule 41    type_specifier -> STRING
Rule 42    type_specifier -> STRING LBRACKET NUMBER RBRACKET
Rule 43    type_specifier -> ID
Rule 44    type_expression -> type_expression COMMA subrange
Rule 45    type_expression -> subrange
Rule 46    subrange -> NUMBER DOTDOT NUMBER
Rule 47    subrange -> NUMBER DOTDOT ID
Rule 48    field_list -> field_list field
Rule 49    field_list -> field
Rule 50    field_list -> empty
Rule 51    field -> id_list COLON type_specifier
Rule 52    field -> id_list COLON type_specifier SEMICOLON
Rule 53    field -> VAR id_list COLON type_specifier
Rule 54    field -> VAR id_list COLON type_specifier SEMICOLON
Rule 55    field -> id_list LPAREN STRING_LITERAL RPAREN
Rule 56    field -> if_statement
Rule 57    field -> case_statement
Rule 58    field -> assignment_statement
Rule 59    case_part -> CASE ID COLON type_specifier OF case_list SEMICOLON
Rule 60    case_part -> empty
Rule 61    case_list -> case_list SEMICOLON case_element
Rule 62    case_list -> case_element
Rule 63    case_element -> NUMBER COLON LPAREN field_list RPAREN
Rule 64    case_element -> NUMBER COLON field_list
Rule 65    method_list -> method_list method
Rule 66    method_list -> method
Rule 67    method_list -> empty
Rule 68    method -> CONSTRUCTOR ID LPAREN field_list RPAREN SEMICOLON
Rule 69    method -> PROCEDURE ID LPAREN field_list RPAREN SEMICOLON
Rule 70    method -> FUNCTION ID LPAREN field_list RPAREN COLON type_specifier SEMICOLON
Rule 71    method -> DESTRUCTOR ID SEMICOLON
Rule 72    case_statement -> CASE expression OF case_list END SEMICOLON
Rule 73    case_statement -> CASE expression OF case_list ELSE statement_list END SEMICOLON
Rule 74    case_statement -> CASE expression OF case_list END
Rule 75    type_specifier -> LONGINT
Rule 76    procedure_declarations -> procedure_declaration
Rule 77    procedure_declarations -> procedure_declarations procedure_declaration
Rule 78    procedure_declaration -> PROCEDURE ID LPAREN parameter_list RPAREN SEMICOLON block SEMICOLON
Rule 79    procedure_declaration -> PROCEDURE ID LPAREN RPAREN SEMICOLON block SEMICOLON
Rule 80    procedure_declaration -> PROCEDURE ID SEMICOLON block SEMICOLON
Rule 81    procedure_declaration -> PROCEDURE ID LPAREN parameter_list RPAREN SEMICOLON FORWARD SEMICOLON
Rule 82    procedure_declaration -> PROCEDURE ID LPAREN RPAREN SEMICOLON FORWARD SEMICOLON
Rule 83    procedure_declaration -> PROCEDURE ID SEMICOLON FORWARD SEMICOLON
Rule 84    function_declaration -> FUNCTION ID LPAREN parameter_list RPAREN COLON type_specifier SEMICOLON block SEMICOLON
Rule 85    function_declaration -> FUNCTION ID LPAREN parameter_list RPAREN COLON type_specifier SEMICOLON FORWARD SEMICOLON
Rule 86    function_call -> ID LPAREN expression_list RPAREN
Rule 87    factor -> function_call
Rule 88    parameter_list -> parameter
Rule 89    parameter_list -> parameter_list SEMICOLON parameter
Rule 90    parameter_list -> empty
Rule 91    parameter -> ID COLON type_specifier
Rule 92    compound_statement -> BEGIN statement_list END
Rule 93    statement_list -> statement SEMICOLON
Rule 94    statement_list -> statement_list statement SEMICOLON
Rule 95    statement -> if_statement
Rule 96    statement -> assignment_statement
Rule 97    statement -> while_statement
Rule 98    statement -> procedure_call
Rule 99    statement -> compound_statement
Rule 100   statement -> for_statement
Rule 101   statement -> case_statement
Rule 102   statement -> with_statement
Rule 103   statement -> empty
Rule 104   statement -> statement_writeln
Rule 105   with_statement -> WITH variable DO statement
Rule 106   if_statement -> IF expression THEN statement ELSE statement
Rule 107   if_statement -> IF expression THEN statement
Rule 108   if_statement -> IF expression IN statement THEN statement ELSE statement
Rule 109   if_statement -> IF expression IN statement THEN statement
Rule 110   for_statement -> FOR ID COLON_EQUAL expression TO expression DO block
Rule 111   for_statement -> FOR ID COLON_EQUAL expression DOWNTO expression DO block
Rule 112   assignment_statement -> variable COLON_EQUAL expression
Rule 113   assignment_statement -> variable COLON_EQUAL BOOLEAN_LITERAL SEMICOLON
Rule 114   assignment_statement -> variable PLUS COLON_EQUAL expression
Rule 115   assignment_statement -> variable MINUS COLON_EQUAL expression
Rule 116   assignment_statement -> variable TIMES COLON_EQUAL expression
Rule 117   assignment_statement -> variable DIVIDE COLON_EQUAL expression
Rule 118   assignment_statement -> ID COLON_EQUAL expression
Rule 119   variable -> ID
Rule 120   variable -> variable LBRACKET expression RBRACKET
Rule 121   variable -> variable DOT ID
Rule 122   variable -> ID LBRACKET index_list RBRACKET
Rule 123   index_list -> expression
Rule 124   index_list -> index_list COMMA expression
Rule 125   while_statement -> WHILE expression DO statement
Rule 126   procedure_call -> ID LPAREN expression_list RPAREN
Rule 127   procedure_call -> ID
Rule 128   expression_list -> expression expression_list_tail
Rule 129   expression_list_tail -> COMMA expression expression_list_tail
Rule 130   expression_list_tail -> empty
Rule 131   expression_list -> empty
Rule 132   expression -> simple_expression relop simple_expression
Rule 133   expression -> simple_expression
Rule 134   simple_expression -> term simple_expression_tail
Rule 135   simple_expression_tail -> addop term
Rule 136   simple_expression_tail -> empty
Rule 137   addop -> PLUS
Rule 138   addop -> MINUS
Rule 139   term -> factor term_tail
Rule 140   term_tail -> mulop factor
Rule 141   term_tail -> empty
Rule 142   mulop -> TIMES
Rule 143   mulop -> DIVIDE
Rule 144   mulop -> DIV
Rule 145   expression -> expression PLUS expression
Rule 146   expression -> expression MINUS expression
Rule 147   expression -> expression TIMES expression
Rule 148   expression -> expression DIVIDE expression
Rule 149   expression -> expression MOD expression
Rule 150   factor -> LPAREN expression RPAREN
Rule 151   factor -> variable
Rule 152   factor -> NUMBER
Rule 153   factor -> STRING_LITERAL
Rule 154   relop -> LESS
Rule 155   relop -> LESS_EQUAL
Rule 156   relop -> GREAT
Rule 157   relop -> GREAT_EQUAL
Rule 158   relop -> EQUAL
Rule 159   relop -> DIFFERENT
Rule 160   empty -> <empty>
Rule 161   statement -> READLN
Rule 162   statement -> READLN LPAREN variable RPAREN
Rule 163   statement -> READLN LBRACKET variable RBRACKET
Rule 164   statement -> WRITE LPAREN expression_list RPAREN
Rule 165   statement -> WRITELN LPAREN write_arguments RPAREN
Rule 166   write_arguments -> write_argument
Rule 167   write_arguments -> write_arguments COMMA write_argument
Rule 168   write_argument -> expression
Rule 169   write_argument -> expression COLON expression
Rule 170   write_argument -> expression COLON expression COLON expression
Rule 171   statement -> USES ID SEMICOLON
Rule 172   constant_declaration -> CONST constant_list
Rule 173   constant_list -> constant
Rule 174   constant_list -> constant_list constant
Rule 175   constant -> ID EQUAL CHARACTER_LITERAL SEMICOLON
Rule 176   constant -> ID EQUAL NUMBER SEMICOLON
Rule 177   constant -> ID EQUAL STRING_LITERAL SEMICOLON
Rule 178   constant -> ID EQUAL BOOLEAN_LITERAL SEMICOLON
Rule 179   expression -> expression AND expression
Rule 180   expression -> expression OR expression
Rule 181   expression -> NOT expression

Terminals, with rules where they appear

AND                  : 179
ARRAY                : 30
BEGIN                : 92
BOOLEAN_LITERAL      : 37 113 178
BYTE                 : 39
CASE                 : 59 72 73 74
CHAR                 : 40
CHARACTER_LITERAL    : 175
COLON                : 14 24 51 52 53 54 59 63 64 70 84 85 91 169 170 170
COLON_EQUAL          : 110 111 112 113 114 115 116 117 118
COMMA                : 20 44 124 129 167
CONST                : 172
CONSTRUCTOR          : 12 16 17 68
DESTRUCTOR           : 15 71
DIFFERENT            : 159
DIV                  : 144
DIVIDE               : 117 143 148
DO                   : 105 110 111 125
DOT                  : 1 12 13 14 15 121
DOTDOT               : 46 47
DOWNTO               : 111
ELSE                 : 73 106 108
END                  : 34 35 72 73 74 92
EQUAL                : 29 158 175 176 177 178
FALSE                : 
FILE                 : 32
FOR                  : 110 111
FORWARD              : 81 82 83 85
FUNCTION             : 14 70 84 85
GOTO                 : 
GREAT                : 156
GREAT_EQUAL          : 157
ID                   : 1 12 12 13 13 14 14 15 15 16 17 19 20 29 43 47 59 68 69 70 71 78 79 80 81 82 83 84 85 86 91 110 111 118 119 121 122 126 127 171 175 176 177 178
IF                   : 106 107 108 109
IN                   : 108 109
INTEGER              : 38
LABEL                : 
LBLOCK               : 
LBRACKET             : 30 42 120 122 163
LESS                 : 154
LESS_EQUAL           : 155
LONGINT              : 75
LPAREN               : 12 13 14 16 17 36 55 63 68 69 70 78 79 81 82 84 85 86 126 150 162 164 165
MINUS                : 115 138 146
MOD                  : 149
NIL                  : 
NOT                  : 181
NUMBER               : 42 46 46 47 63 64 152 176
OBJECT               : 35
OF                   : 30 32 33 59 72 73 74
OR                   : 180
PACKED               : 
PLUS                 : 114 137 145
PROCEDURE            : 13 69 78 79 80 81 82 83
PROGRAM              : 1
RBLOCK               : 
RBRACKET             : 30 42 120 122 163
READLINE             : 
READLN               : 161 162 163
RECORD               : 34
REPEAT               : 
RPAREN               : 12 13 14 16 17 36 55 63 68 69 70 78 79 81 82 84 85 86 126 150 162 164 165
SEMICOLON            : 1 12 13 14 15 16 17 18 24 29 52 54 59 61 68 69 70 71 72 73 78 78 79 79 80 80 81 81 82 82 83 83 84 84 85 85 89 93 94 113 171 175 176 177 178
SET                  : 33
STRING               : 41 42
STRING_LITERAL       : 55 153 177
SUBRANGE             : 
THEN                 : 106 107 108 109
TIMES                : 116 142 147
TO                   : 110
TRUE                 : 
TYPE                 : 26
UNTIL                : 
USES                 : 18 171
VAR                  : 21 53 54
WHILE                : 125
WITH                 : 105
WRITE                : 164
WRITELN              : 165
error                : 

Nonterminals, with rules where they appear

addop                : 135
assignment_statement : 58 96
block                : 1 12 13 14 15 16 17 78 79 80 84 110 111
case_element         : 61 62
case_list            : 59 61 72 73 74
case_part            : 34
case_statement       : 57 101
compound_statement   : 25 99
constant             : 173 174
constant_declaration : 5
constant_list        : 172 174
constructor_declaration : 10
declaration          : 22 23
declaration_list     : 21 23
declaration_section  : 2
declaration_sections : 1 2 25
empty                : 3 50 60 67 90 103 130 131 136 141
expression           : 72 73 74 106 107 108 109 110 110 111 111 112 114 115 116 117 118 120 123 124 125 128 129 145 145 146 146 147 147 148 148 149 149 150 168 169 169 170 170 170 179 179 180 180 181
expression_list      : 86 126 164
expression_list_tail : 128 129
factor               : 139 140
field                : 48 49
field_list           : 16 34 35 48 63 64 68 69 70
for_statement        : 100
function_call        : 87
function_declaration : 9
id_list              : 18 20 24 36 51 52 53 54 55
if_statement         : 56 95
index_list           : 122 124
method               : 65 66
method_declaration   : 11
method_list          : 35 65
mulop                : 140
parameter            : 88 89
parameter_list       : 12 13 14 78 81 84 85 89
procedure_call       : 98
procedure_declaration : 76 77
procedure_declarations : 8 77
program              : 0
relop                : 132
simple_expression    : 132 132 133
simple_expression_tail : 134
statement            : 93 94 105 106 106 107 108 108 108 109 109 125
statement_list       : 73 92 94
statement_writeln    : 104
subrange             : 31 44 45
term                 : 134 135
term_tail            : 139
type_declaration     : 6
type_definition      : 27 28
type_expression      : 30 44
type_list            : 26 28
type_specifier       : 14 24 29 30 32 33 51 52 53 54 59 70 84 85 91
uses_opt             : 4
var_declaration      : 7
variable             : 105 112 113 114 115 116 117 120 121 151 162 163
while_statement      : 97
with_statement       : 102
write_argument       : 166 167
write_arguments      : 165 167

