Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    FALSE
    GOTO
    IN
    LABEL
    LBLOCK
    NIL
    PACKED
    RBLOCK
    READLINE
    REPEAT
    SUBRANGE
    TRUE
    UNTIL

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM ID SEMICOLON declaration_sections block DOT
Rule 2     declaration_sections -> declaration_sections declaration_section
Rule 3     declaration_sections -> empty
Rule 4     declaration_section -> uses_opt
Rule 5     declaration_section -> constant_declaration
Rule 6     declaration_section -> type_declaration
Rule 7     declaration_section -> var_declaration
Rule 8     declaration_section -> procedure_declarations
Rule 9     declaration_section -> function_declaration
Rule 10    uses_opt -> USES id_list SEMICOLON
Rule 11    id_list -> ID
Rule 12    id_list -> id_list COMMA ID
Rule 13    var_declaration -> VAR declaration_list
Rule 14    declaration_list -> declaration
Rule 15    declaration_list -> declaration_list declaration
Rule 16    declaration -> id_list COLON type_specifier SEMICOLON
Rule 17    block -> declaration_sections compound_statement
Rule 18    type_declaration -> TYPE type_list
Rule 19    type_list -> type_definition
Rule 20    type_list -> type_list type_definition
Rule 21    type_definition -> ID EQUAL type_specifier SEMICOLON
Rule 22    type_specifier -> ARRAY LBRACKET type_expression RBRACKET OF type_specifier
Rule 23    type_specifier -> subrange
Rule 24    type_specifier -> FILE OF type_specifier
Rule 25    type_specifier -> SET OF type_specifier
Rule 26    type_specifier -> RECORD field_list case_part END
Rule 27    type_specifier -> OBJECT field_list method_list END
Rule 28    type_specifier -> LPAREN id_list RPAREN
Rule 29    type_specifier -> BOOLEAN_LITERAL
Rule 30    type_specifier -> INTEGER
Rule 31    type_specifier -> BYTE
Rule 32    type_specifier -> CHAR
Rule 33    type_specifier -> STRING
Rule 34    type_specifier -> STRING LBRACKET NUMBER RBRACKET
Rule 35    type_specifier -> ID
Rule 36    type_expression -> type_expression COMMA subrange
Rule 37    type_expression -> subrange
Rule 38    subrange -> NUMBER DOTDOT NUMBER
Rule 39    field_list -> field_list field
Rule 40    field_list -> field
Rule 41    field_list -> empty
Rule 42    field -> id_list COLON type_specifier
Rule 43    field -> id_list COLON type_specifier SEMICOLON
Rule 44    field -> VAR id_list COLON type_specifier
Rule 45    field -> VAR id_list COLON type_specifier SEMICOLON
Rule 46    field -> id_list LPAREN STRING_LITERAL RPAREN
Rule 47    case_part -> CASE ID COLON type_specifier OF case_list SEMICOLON
Rule 48    case_part -> empty
Rule 49    case_list -> case_list SEMICOLON case_element
Rule 50    case_list -> case_element
Rule 51    case_element -> NUMBER COLON LPAREN field_list RPAREN
Rule 52    case_element -> NUMBER COLON field_list
Rule 53    method_list -> method_list method
Rule 54    method_list -> method
Rule 55    method_list -> empty
Rule 56    method -> CONSTRUCTOR ID LPAREN field_list RPAREN SEMICOLON
Rule 57    method -> PROCEDURE ID LPAREN field_list RPAREN SEMICOLON
Rule 58    method -> FUNCTION ID LPAREN field_list RPAREN COLON type_specifier SEMICOLON
Rule 59    method -> DESTRUCTOR ID SEMICOLON
Rule 60    case_statement -> CASE expression OF case_list END SEMICOLON
Rule 61    case_statement -> CASE expression OF case_list END
Rule 62    type_specifier -> LONGINT
Rule 63    procedure_declarations -> procedure_declaration
Rule 64    procedure_declarations -> procedure_declarations procedure_declaration
Rule 65    procedure_declaration -> PROCEDURE ID LPAREN field_list RPAREN SEMICOLON block
Rule 66    procedure_declaration -> PROCEDURE ID LPAREN RPAREN SEMICOLON block SEMICOLON
Rule 67    procedure_declaration -> PROCEDURE ID SEMICOLON block SEMICOLON
Rule 68    procedure_declaration -> PROCEDURE ID LPAREN field_list RPAREN SEMICOLON FORWARD SEMICOLON
Rule 69    procedure_declaration -> PROCEDURE ID LPAREN RPAREN SEMICOLON FORWARD SEMICOLON
Rule 70    procedure_declaration -> PROCEDURE ID SEMICOLON FORWARD SEMICOLON
Rule 71    function_declaration -> FUNCTION ID LPAREN parameter_list RPAREN COLON type_specifier SEMICOLON block
Rule 72    function_declaration -> FUNCTION ID LPAREN parameter_list RPAREN COLON type_specifier SEMICOLON FORWARD SEMICOLON
Rule 73    function_call -> ID LPAREN expression_list RPAREN
Rule 74    factor -> function_call
Rule 75    parameter_list -> parameter
Rule 76    parameter_list -> parameter_list SEMICOLON parameter
Rule 77    parameter_list -> empty
Rule 78    parameter -> id_list COLON type_specifier
Rule 79    parameter -> VAR id_list COLON type_specifier
Rule 80    compound_statement -> BEGIN statement_list END SEMICOLON
Rule 81    compound_statement -> BEGIN statement_list END
Rule 82    statement_list -> statement statement_list_tail
Rule 83    statement_list_tail -> SEMICOLON statement statement_list_tail
Rule 84    statement_list_tail -> empty
Rule 85    statement -> if_statement
Rule 86    statement -> assignment_statement
Rule 87    statement -> while_statement
Rule 88    statement -> procedure_call
Rule 89    statement -> compound_statement
Rule 90    statement -> for_statement
Rule 91    statement -> case_statement
Rule 92    statement -> empty
Rule 93    if_statement -> IF expression THEN statement ELSE statement
Rule 94    if_statement -> IF expression THEN statement
Rule 95    for_statement -> FOR ID COLON_EQUAL expression TO expression DO statement
Rule 96    for_statement -> FOR ID COLON_EQUAL expression DOWNTO expression DO statement
Rule 97    assignment_statement -> variable COLON_EQUAL expression
Rule 98    assignment_statement -> variable COLON_EQUAL BOOLEAN_LITERAL
Rule 99    variable -> ID
Rule 100   variable -> ID LBRACKET index_list RBRACKET
Rule 101   index_list -> expression
Rule 102   index_list -> index_list COMMA expression
Rule 103   while_statement -> WHILE expression DO statement
Rule 104   procedure_call -> ID LPAREN expression_list RPAREN
Rule 105   procedure_call -> ID
Rule 106   expression_list -> expression expression_list_tail
Rule 107   expression_list_tail -> COMMA expression expression_list_tail
Rule 108   expression_list_tail -> empty
Rule 109   expression_list -> empty
Rule 110   expression -> simple_expression relop simple_expression
Rule 111   expression -> simple_expression
Rule 112   simple_expression -> term simple_expression_tail
Rule 113   simple_expression_tail -> addop term
Rule 114   simple_expression_tail -> empty
Rule 115   addop -> PLUS
Rule 116   addop -> MINUS
Rule 117   term -> factor term_tail
Rule 118   term_tail -> mulop factor
Rule 119   term_tail -> empty
Rule 120   mulop -> TIMES
Rule 121   mulop -> DIVIDE
Rule 122   mulop -> DIV
Rule 123   expression -> expression PLUS expression
Rule 124   expression -> expression MINUS expression
Rule 125   expression -> expression TIMES expression
Rule 126   expression -> expression DIVIDE expression
Rule 127   expression -> expression MOD expression
Rule 128   factor -> LPAREN expression RPAREN
Rule 129   factor -> variable
Rule 130   factor -> NUMBER
Rule 131   factor -> STRING_LITERAL
Rule 132   relop -> LESS
Rule 133   relop -> LESS_EQUAL
Rule 134   relop -> GREAT
Rule 135   relop -> GREAT_EQUAL
Rule 136   relop -> EQUAL
Rule 137   relop -> DIFFERENT
Rule 138   empty -> <empty>
Rule 139   statement -> READLN
Rule 140   statement -> READLN LPAREN variable RPAREN
Rule 141   statement -> READLN LBRACKET variable RBRACKET
Rule 142   statement -> WRITELN LPAREN expression_list RPAREN
Rule 143   statement -> WRITE LPAREN expression_list RPAREN
Rule 144   statement -> USES ID SEMICOLON
Rule 145   constant_declaration -> CONST constant_list
Rule 146   constant_list -> constant
Rule 147   constant_list -> constant_list constant
Rule 148   constant -> ID EQUAL CHARACTER_LITERAL SEMICOLON
Rule 149   constant -> ID EQUAL NUMBER SEMICOLON
Rule 150   constant -> ID EQUAL STRING_LITERAL SEMICOLON
Rule 151   constant -> ID EQUAL BOOLEAN_LITERAL SEMICOLON
Rule 152   expression -> expression AND expression
Rule 153   expression -> expression OR expression
Rule 154   expression -> NOT expression
Rule 155   with_statement -> WITH variable_list DO statement
Rule 156   with_statement -> WITH variable_list DO compound_statement

Terminals, with rules where they appear

AND                  : 152
ARRAY                : 22
BEGIN                : 80 81
BOOLEAN_LITERAL      : 29 98 151
BYTE                 : 31
CASE                 : 47 60 61
CHAR                 : 32
CHARACTER_LITERAL    : 148
COLON                : 16 42 43 44 45 47 51 52 58 71 72 78 79
COLON_EQUAL          : 95 96 97 98
COMMA                : 12 36 102 107
CONST                : 145
CONSTRUCTOR          : 56
DESTRUCTOR           : 59
DIFFERENT            : 137
DIV                  : 122
DIVIDE               : 121 126
DO                   : 95 96 103 155 156
DOT                  : 1
DOTDOT               : 38
DOWNTO               : 96
ELSE                 : 93
END                  : 26 27 60 61 80 81
EQUAL                : 21 136 148 149 150 151
FALSE                : 
FILE                 : 24
FOR                  : 95 96
FORWARD              : 68 69 70 72
FUNCTION             : 58 71 72
GOTO                 : 
GREAT                : 134
GREAT_EQUAL          : 135
ID                   : 1 11 12 21 35 47 56 57 58 59 65 66 67 68 69 70 71 72 73 95 96 99 100 104 105 144 148 149 150 151
IF                   : 93 94
IN                   : 
INTEGER              : 30
LABEL                : 
LBLOCK               : 
LBRACKET             : 22 34 100 141
LESS                 : 132
LESS_EQUAL           : 133
LONGINT              : 62
LPAREN               : 28 46 51 56 57 58 65 66 68 69 71 72 73 104 128 140 142 143
MINUS                : 116 124
MOD                  : 127
NIL                  : 
NOT                  : 154
NUMBER               : 34 38 38 51 52 130 149
OBJECT               : 27
OF                   : 22 24 25 47 60 61
OR                   : 153
PACKED               : 
PLUS                 : 115 123
PROCEDURE            : 57 65 66 67 68 69 70
PROGRAM              : 1
RBLOCK               : 
RBRACKET             : 22 34 100 141
READLINE             : 
READLN               : 139 140 141
RECORD               : 26
REPEAT               : 
RPAREN               : 28 46 51 56 57 58 65 66 68 69 71 72 73 104 128 140 142 143
SEMICOLON            : 1 10 16 21 43 45 47 49 56 57 58 59 60 65 66 66 67 67 68 68 69 69 70 70 71 72 72 76 80 83 144 148 149 150 151
SET                  : 25
STRING               : 33 34
STRING_LITERAL       : 46 131 150
SUBRANGE             : 
THEN                 : 93 94
TIMES                : 120 125
TO                   : 95
TRUE                 : 
TYPE                 : 18
UNTIL                : 
USES                 : 10 144
VAR                  : 13 44 45 79
WHILE                : 103
WITH                 : 155 156
WRITE                : 143
WRITELN              : 142
error                : 

Nonterminals, with rules where they appear

addop                : 113
assignment_statement : 86
block                : 1 65 66 67 71
case_element         : 49 50
case_list            : 47 49 60 61
case_part            : 26
case_statement       : 91
compound_statement   : 17 89 156
constant             : 146 147
constant_declaration : 5
constant_list        : 145 147
declaration          : 14 15
declaration_list     : 13 15
declaration_section  : 2
declaration_sections : 1 2 17
empty                : 3 41 48 55 77 84 92 108 109 114 119
expression           : 60 61 93 94 95 95 96 96 97 101 102 103 106 107 123 123 124 124 125 125 126 126 127 127 128 152 152 153 153 154
expression_list      : 73 104 142 143
expression_list_tail : 106 107
factor               : 117 118
field                : 39 40
field_list           : 26 27 39 51 52 56 57 58 65 68
for_statement        : 90
function_call        : 74
function_declaration : 9
id_list              : 10 12 16 28 42 43 44 45 46 78 79
if_statement         : 85
index_list           : 100 102
method               : 53 54
method_list          : 27 53
mulop                : 118
parameter            : 75 76
parameter_list       : 71 72 76
procedure_call       : 88
procedure_declaration : 63 64
procedure_declarations : 8 64
program              : 0
relop                : 110
simple_expression    : 110 110 111
simple_expression_tail : 112
statement            : 82 83 93 93 94 95 96 103 155
statement_list       : 80 81
statement_list_tail  : 82 83
subrange             : 23 36 37
term                 : 112 113
term_tail            : 117
type_declaration     : 6
type_definition      : 19 20
type_expression      : 22 36
type_list            : 18 20
type_specifier       : 16 21 22 24 25 42 43 44 45 47 58 71 72 78 79
uses_opt             : 4
var_declaration      : 7
variable             : 97 98 129 140 141
variable_list        : 155 156
while_statement      : 87
with_statement       : 

