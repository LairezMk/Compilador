Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    BOOLEAN_LITERAL
    CASE
    FALSE
    FILE
    GOTO
    IN
    LABEL
    LBLOCK
    NIL
    PACKED
    RBLOCK
    READLINE
    RECORD
    REPEAT
    SET
    STRING
    TRUE
    UNTIL
    WITH

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM ID SEMICOLON declaration_sections block DOT
Rule 2     declaration_sections -> declaration_sections declaration_section
Rule 3     declaration_section -> uses_opt
Rule 4     declaration_section -> constant_declaration
Rule 5     declaration_section -> type_declaration
Rule 6     declaration_section -> var_declaration
Rule 7     declaration_section -> procedure_declaration
Rule 8     declaration_section -> function_declaration
Rule 9     uses_opt -> USES ID SEMICOLON
Rule 10    uses_opt -> empty
Rule 11    var_declaration -> VAR declaration_list
Rule 12    declaration_list -> declaration
Rule 13    declaration_list -> declaration_list declaration
Rule 14    declaration -> id_list COLON type_specifier SEMICOLON
Rule 15    block -> declaration_sections compound_statement
Rule 16    id_list -> ID
Rule 17    id_list -> id_list COMMA ID
Rule 18    type_declaration -> TYPE type_list
Rule 19    type_list -> type_definition
Rule 20    type_list -> type_list type_definition
Rule 21    type_definition -> ID EQUAL type_specifier SEMICOLON
Rule 22    type_specifier -> ARRAY LBRACKET expression DOTDOT expression RBRACKET OF type_specifier
Rule 23    type_specifier -> INTEGER
Rule 24    type_specifier -> BYTE
Rule 25    type_specifier -> CHAR
Rule 26    type_specifier -> ID
Rule 27    type_specifier -> LONGINT
Rule 28    procedure_declarations -> procedure_declaration
Rule 29    procedure_declarations -> procedure_declarations procedure_declaration
Rule 30    procedure_declaration -> PROCEDURE ID LPAREN parameter_list RPAREN SEMICOLON block SEMICOLON
Rule 31    procedure_declaration -> PROCEDURE ID LPAREN parameter_list RPAREN SEMICOLON block DOT
Rule 32    function_declaration -> FUNCTION ID LPAREN parameter_list RPAREN COLON type_specifier SEMICOLON block SEMICOLON
Rule 33    function_call -> ID LPAREN expression_list RPAREN
Rule 34    factor -> function_call
Rule 35    parameter_list -> parameter
Rule 36    parameter_list -> parameter_list SEMICOLON parameter
Rule 37    parameter -> id_list COLON type_specifier
Rule 38    parameter -> VAR id_list COLON type_specifier
Rule 39    compound_statement -> BEGIN statement_list END
Rule 40    statement_list -> statement statement_list_tail
Rule 41    statement_list_tail -> SEMICOLON statement statement_list_tail
Rule 42    statement_list_tail -> empty
Rule 43    statement -> if_statement
Rule 44    statement -> assignment_statement
Rule 45    statement -> while_statement
Rule 46    statement -> procedure_call
Rule 47    statement -> compound_statement
Rule 48    statement -> for_statement
Rule 49    statement -> empty
Rule 50    if_statement -> IF expression THEN statement ELSE statement
Rule 51    if_statement -> IF expression THEN statement
Rule 52    for_statement -> FOR ID COLON_EQUAL expression TO expression DO statement
Rule 53    for_statement -> FOR ID COLON_EQUAL expression DOWNTO expression DO statement
Rule 54    assignment_statement -> variable COLON_EQUAL expression
Rule 55    variable -> ID
Rule 56    variable -> ID LBRACKET expression RBRACKET
Rule 57    while_statement -> WHILE expression DO statement
Rule 58    procedure_call -> ID LPAREN expression_list RPAREN
Rule 59    expression_list -> expression expression_list_tail
Rule 60    expression_list_tail -> COMMA expression expression_list_tail
Rule 61    expression_list_tail -> empty
Rule 62    expression_list -> empty
Rule 63    expression -> simple_expression relop simple_expression
Rule 64    expression -> simple_expression
Rule 65    simple_expression -> term simple_expression_tail
Rule 66    simple_expression_tail -> addop term
Rule 67    simple_expression_tail -> empty
Rule 68    addop -> PLUS
Rule 69    addop -> MINUS
Rule 70    term -> factor term_tail
Rule 71    term_tail -> mulop factor
Rule 72    term_tail -> empty
Rule 73    mulop -> TIMES
Rule 74    mulop -> DIVIDE
Rule 75    mulop -> DIV
Rule 76    expression -> expression PLUS expression
Rule 77    expression -> expression MINUS expression
Rule 78    expression -> expression TIMES expression
Rule 79    expression -> expression DIVIDE expression
Rule 80    expression -> expression MOD expression
Rule 81    factor -> LPAREN expression RPAREN
Rule 82    factor -> variable
Rule 83    factor -> NUMBER
Rule 84    factor -> STRING_LITERAL
Rule 85    relop -> LESS
Rule 86    relop -> LESS_EQUAL
Rule 87    relop -> GREAT
Rule 88    relop -> GREAT_EQUAL
Rule 89    relop -> EQUAL
Rule 90    relop -> DIFFERENT
Rule 91    empty -> <empty>
Rule 92    statement -> READLN
Rule 93    statement -> READLN LPAREN variable RPAREN
Rule 94    statement -> READLN LBRACKET variable RBRACKET
Rule 95    statement -> WRITELN LPAREN expression_list RPAREN
Rule 96    statement -> WRITE LPAREN expression_list RPAREN
Rule 97    statement -> USES ID SEMICOLON
Rule 98    constant_declaration -> CONST constant_list
Rule 99    constant_list -> constant
Rule 100   constant_list -> constant_list constant
Rule 101   constant -> ID EQUAL CHARACTER_LITERAL SEMICOLON
Rule 102   constant -> ID EQUAL NUMBER SEMICOLON
Rule 103   constant -> ID EQUAL STRING_LITERAL SEMICOLON
Rule 104   expression -> expression AND expression
Rule 105   expression -> expression OR expression
Rule 106   expression -> NOT expression

Terminals, with rules where they appear

AND                  : 104
ARRAY                : 22
BEGIN                : 39
BOOLEAN_LITERAL      : 
BYTE                 : 24
CASE                 : 
CHAR                 : 25
CHARACTER_LITERAL    : 101
COLON                : 14 32 37 38
COLON_EQUAL          : 52 53 54
COMMA                : 17 60
CONST                : 98
DIFFERENT            : 90
DIV                  : 75
DIVIDE               : 74 79
DO                   : 52 53 57
DOT                  : 1 31
DOTDOT               : 22
DOWNTO               : 53
ELSE                 : 50
END                  : 39
EQUAL                : 21 89 101 102 103
FALSE                : 
FILE                 : 
FOR                  : 52 53
FUNCTION             : 32
GOTO                 : 
GREAT                : 87
GREAT_EQUAL          : 88
ID                   : 1 9 16 17 21 26 30 31 32 33 52 53 55 56 58 97 101 102 103
IF                   : 50 51
IN                   : 
INTEGER              : 23
LABEL                : 
LBLOCK               : 
LBRACKET             : 22 56 94
LESS                 : 85
LESS_EQUAL           : 86
LONGINT              : 27
LPAREN               : 30 31 32 33 58 81 93 95 96
MINUS                : 69 77
MOD                  : 80
NIL                  : 
NOT                  : 106
NUMBER               : 83 102
OF                   : 22
OR                   : 105
PACKED               : 
PLUS                 : 68 76
PROCEDURE            : 30 31
PROGRAM              : 1
RBLOCK               : 
RBRACKET             : 22 56 94
READLINE             : 
READLN               : 92 93 94
RECORD               : 
REPEAT               : 
RPAREN               : 30 31 32 33 58 81 93 95 96
SEMICOLON            : 1 9 14 21 30 30 31 32 32 36 41 97 101 102 103
SET                  : 
STRING               : 
STRING_LITERAL       : 84 103
THEN                 : 50 51
TIMES                : 73 78
TO                   : 52
TRUE                 : 
TYPE                 : 18
UNTIL                : 
USES                 : 9 97
VAR                  : 11 38
WHILE                : 57
WITH                 : 
WRITE                : 96
WRITELN              : 95
error                : 

Nonterminals, with rules where they appear

addop                : 66
assignment_statement : 44
block                : 1 30 31 32
compound_statement   : 15 47
constant             : 99 100
constant_declaration : 4
constant_list        : 98 100
declaration          : 12 13
declaration_list     : 11 13
declaration_section  : 2
declaration_sections : 1 2 15
empty                : 10 42 49 61 62 67 72
expression           : 22 22 50 51 52 52 53 53 54 56 57 59 60 76 76 77 77 78 78 79 79 80 80 81 104 104 105 105 106
expression_list      : 33 58 95 96
expression_list_tail : 59 60
factor               : 70 71
for_statement        : 48
function_call        : 34
function_declaration : 8
id_list              : 14 17 37 38
if_statement         : 43
mulop                : 71
parameter            : 35 36
parameter_list       : 30 31 32 36
procedure_call       : 46
procedure_declaration : 7 28 29
procedure_declarations : 29
program              : 0
relop                : 63
simple_expression    : 63 63 64
simple_expression_tail : 65
statement            : 40 41 50 50 51 52 53 57
statement_list       : 39
statement_list_tail  : 40 41
term                 : 65 66
term_tail            : 70
type_declaration     : 5
type_definition      : 19 20
type_list            : 18 20
type_specifier       : 14 21 22 32 37 38
uses_opt             : 3
var_declaration      : 6
variable             : 54 82 93 94
while_statement      : 45

